---

- name: Run generate wallets
  command: "/usr/bin/env python3 {{ root_dir | default('root_dir') }}/tooling/bootstrap_wallet_sync.py {{ wallets.num_total | default(wallets.num_total) }} {{ wallets.num_signers | default(wallets.num_signers) }} {{ root_dir | default(root_dir) }}/data {{ sync_dir | default(sync_dir) }}"
  become: yes
  register: gen_wallets_output

- name: Set gen_wallets fact
  set_fact:
    gen_wallets: "{{ gen_wallets_output.stdout | from_json }}"
    concatenate_string: ""
    cacheable: true

- name: Read keyfile and store contents as fact
  slurp:
    src: "{{ item.keyfile_path }}"
  register: keyfile_contents
  loop: "{{ gen_wallets }}"
  become: yes

- name: Set fact for each keyfile content
  set_fact:
    keystore:
      "{{ keystore | default({}) | combine({item.item.address: item.content | b64decode | string}) }}"
    cacheable: true
  loop: "{{ keyfile_contents.results }}"
  loop_control:
    loop_var: item

- name: Extract signer addresses and concatenate
  set_fact:
    concatenate_string: "{{ concatenate_string }}{{ item.address }}"
    cacheable: true
  loop: "{{ gen_wallets }}"
  when: item.type == 'signer'

- name: Generate genesis JSON
  template:
    src: genesis.json.j2
    dest: "/{{ root_dir }}/genesis/genesis.json"
  vars:
    concatenate_string: ""

- name: Read genesis JSON file
  slurp:
    src: "/{{ root_dir }}/genesis/genesis.json"
  register: genesis_json_content

- name: Set genesis_config fact
  set_fact:
    genesis_config: "{{ genesis_json_content.content | b64decode }}"
    cacheable: true

...
